JFDML JFormDesigner: "6.0.2.0.116" Java: "1.8.0_152-release" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormWindow( "javax.swing.JDialog", new FormLayoutManager( class java.awt.BorderLayout ) ) {
			name: "this"
			"title": "Options"
			"modal": true
			"$locationPolicy": 1
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class java.awt.BorderLayout ) ) {
				name: "dialogPane"
				"border": new javax.swing.border.EmptyBorder( 12, 12, 12, 12 )
				add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
					"$horizontalGroup": "par l {seq {space :::p, par l {seq l {comp labelLeelazCommandLine:::p::p, space :::p, comp textFieldLeelazCommandLine:::p:388:p, space :::p, comp buttonResetCommandLine:::::x, space :::p}, seq {par l {seq l {comp labelVariationLimit:::p::p, space :::p, comp radioButtonV5:::p::p, space :::p, comp radioButtonV10:::p::p, space :::p, comp radioButtonV15:::p::p, space :::p, comp radioButtonV30:::p::p, space :::p, comp radioButtonUnlimited:::p::p}, seq l {comp labelAxisSetting:::p::p, space :::p, comp radioButtonA1Top:::p::p, space :::p, comp radioButtonA1Bottom:::p::p}, seq l {comp labelAnalysisModeOn:::p::p, space :::p, comp checkBoxAnalysisWindowShow:::p::p, space :::p, comp checkBoxMouseMoveShow:::p::p, space s:::p, comp labelMaxAnalysisTime:::p::p, space :::p, comp textFieldMaxAnalysisTime:::p::p, space :::p, comp labelMinute:::p::p}, comp labelNotes::l:p::p, seq l {comp labelMoveNumber:::p::p, space :::p, comp checkBoxShowMoveNumber:::p::p, space :::p, comp checkBoxMoveNumberLimit:::p::p, space :::p, comp textFieldMoveNumberLimitCount:::p::p, space :::p, comp labelMoveNumberLimitLabelTail:::p::p}, seq l {comp labelTryPlayingMode:::p::p, space :::p, comp checkBoxAutoEnterTryPlayingMode:::p::p}, seq l {comp labelMainWindow:::p::p, space :::p, comp checkBoxMainWindowAlwaysOnTop:::p::p}, seq l {comp labelSuggestion:::p::p, space :::p, comp checkBoxShowBlackSuggestion:::p::p, space :::p, comp checkBoxShowWhiteSuggestion:::p::p, space :::p, comp checkBoxPlayoutsInShortForm:::p::p}, seq l {comp labelBoardDisplay:::p::p, space :::p, comp radioButtonBoardFancy:::p::p, space :::p, comp radioButtonBoardClassic:::p::p, space :::p, comp labelColorRed:::p::p, space :::p, comp spinnerColorRed:::p::p, space :::p, comp labelColorGreen:::p::p, space :::p, comp spinnerColorGreen:::p::p, space :::p, comp labelColorBlue:::p::p, space :::p, comp spinnerColorBlue:::p::p, space :::p, comp checkBoxFancyStones:::p::p}, seq l {comp labelShadow:::p::p, space :::p, comp checkBoxShowShadow:::p::p, space :::p, comp spinnerShadowSize:::p::p}}, space :0:80:x}}}}"
					"$verticalGroup": "par l {seq l {space :::p, par l {comp radioButtonUnlimited:::p::p, comp radioButtonV30:::p::p, comp radioButtonV15:::p::p, par b:l {comp labelVariationLimit::b:p::p, comp radioButtonV5::b:p::p}, comp radioButtonV10::l:p::p}, space :::p, par b {comp labelAxisSetting::b:p:26:p, comp radioButtonA1Top::b:p::p, comp radioButtonA1Bottom::b:p::p}, space :::p, par b {comp labelBoardDisplay::b:p::p, comp radioButtonBoardFancy::b:p::p, comp radioButtonBoardClassic::b:p::p, comp labelColorRed::b:p::p, comp spinnerColorRed::b:p::p, comp labelColorGreen::b:p::p, comp spinnerColorGreen::b:p::p, comp labelColorBlue::b:p::p, comp spinnerColorBlue::b:p::p, comp checkBoxFancyStones::b:p::p}, space :::p, par b {comp labelShadow::b:p::p, comp checkBoxShowShadow::b:p::p, comp spinnerShadowSize::b:p::p}, space :::p, par b {comp labelSuggestion::b:p::p, comp checkBoxShowBlackSuggestion::b:p::p, comp checkBoxShowWhiteSuggestion::b:p::p, comp checkBoxPlayoutsInShortForm::b:p::p}, space :::p, par b {comp labelAnalysisModeOn::b:p::p, comp checkBoxAnalysisWindowShow::b:p::p, comp checkBoxMouseMoveShow::b:p::p, comp labelMaxAnalysisTime::b:p::p, comp textFieldMaxAnalysisTime::b:p::p, comp labelMinute::b:p::p}, space :::p, par b {comp labelLeelazCommandLine::b:p::p, comp buttonResetCommandLine::b:p::p, comp textFieldLeelazCommandLine::b:p::p}, space :::p, par b {comp labelMoveNumber::b:p::p, comp checkBoxShowMoveNumber::b:p::p, comp checkBoxMoveNumberLimit::b:p::p, comp textFieldMoveNumberLimitCount::b:p::p, comp labelMoveNumberLimitLabelTail::b:p::p}, space :::p, par b {comp labelTryPlayingMode::b:p::p, comp checkBoxAutoEnterTryPlayingMode::b:p::p}, space :::p, par b {comp labelMainWindow::b:p::p, comp checkBoxMainWindowAlwaysOnTop::b:p::p}, space :::x, comp labelNotes:::p::p, space :::p}}"
				} ) {
					name: "contentPanel"
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelVariationLimit"
						"text": "Variation limit:"
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonV5"
						"text": "5"
						"$buttonGroup": new FormReference( "buttonGroupVariationLimit" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonV10"
						"text": "10"
						"$buttonGroup": new FormReference( "buttonGroupVariationLimit" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonV15"
						"text": "15"
						"$buttonGroup": new FormReference( "buttonGroupVariationLimit" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonV30"
						"text": "30"
						"$buttonGroup": new FormReference( "buttonGroupVariationLimit" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonUnlimited"
						"text": "Unlimited"
						"selected": true
						"$buttonGroup": new FormReference( "buttonGroupVariationLimit" )
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelAxisSetting"
						"text": "Axis setting:"
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonA1Top"
						"text": "A1 is on top(Yehu)"
						"$buttonGroup": new FormReference( "buttonGroupAxisSetting" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonA1Bottom"
						"text": "A1 is on bottom(Yike, Yicheng, Zen, .etc)"
						"$buttonGroup": new FormReference( "buttonGroupAxisSetting" )
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelBoardDisplay"
						"text": "Board display:"
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonBoardClassic"
						"text": "Classic:"
						"$buttonGroup": new FormReference( "buttonGroupBoardColor" )
					} )
					add( new FormComponent( "javax.swing.JRadioButton" ) {
						name: "radioButtonBoardFancy"
						"text": "Fancy"
						"$buttonGroup": new FormReference( "buttonGroupBoardColor" )
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelSuggestion"
						"text": "Suggestions:"
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelAnalysisModeOn"
						"text": "Analysis mode:"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxAnalysisWindowShow"
						"text": "Show move list"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxMouseMoveShow"
						"text": "Mouse over show move."
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelLeelazCommandLine"
						"text": "Leelaz command line:"
					} )
					add( new FormComponent( "javax.swing.JTextField" ) {
						name: "textFieldLeelazCommandLine"
						"text": "-g -t2 -wnetwork -b0"
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelNotes"
						"text": "Note: Restarting Lizzie is required after changing the leelaz command line"
						"font": new com.jformdesigner.model.SwingDerivedFont( null, 1, 0, false )
					} )
					add( new FormComponent( "javax.swing.JButton" ) {
						name: "buttonResetCommandLine"
						"text": "Reset"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "buttonResetCommandLineActionPerformed", true ) )
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelMoveNumber"
						"text": "Move number:"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxShowMoveNumber"
						"text": "Show"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxMoveNumberLimit"
						"text": "Only show last"
					} )
					add( new FormComponent( "javax.swing.JTextField" ) {
						name: "textFieldMoveNumberLimitCount"
						"text": "30"
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelMoveNumberLimitLabelTail"
						"text": "move(s)."
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxPlayoutsInShortForm"
						"text": "Playouts in short form"
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelTryPlayingMode"
						"text": "Try playing mode:"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxAutoEnterTryPlayingMode"
						"text": "Automatically enter when placing stone in middle game."
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelMainWindow"
						"text": "Main window:"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxMainWindowAlwaysOnTop"
						"text": "Always on top"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxShowBlackSuggestion"
						"text": "Show black"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelMaxAnalysisTime"
						"text": "Max time:"
					} )
					add( new FormComponent( "javax.swing.JTextField" ) {
						name: "textFieldMaxAnalysisTime"
						"text": "2"
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelMinute"
						"text": "minute(s)"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxShowWhiteSuggestion"
						"text": "Show white"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelColorRed"
						"text": "R"
					} )
					add( new FormComponent( "javax.swing.JSpinner" ) {
						name: "spinnerColorRed"
						"model": new javax.swing.SpinnerNumberModel( 178, 0, 255, 1 )
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelColorGreen"
						"text": "G"
					} )
					add( new FormComponent( "javax.swing.JSpinner" ) {
						name: "spinnerColorGreen"
						"model": new javax.swing.SpinnerNumberModel( 140, 0, 255, 1 )
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelColorBlue"
						"text": "B"
					} )
					add( new FormComponent( "javax.swing.JSpinner" ) {
						name: "spinnerColorBlue"
						"model": new javax.swing.SpinnerNumberModel( 0, 0, 255, 1 )
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxFancyStones"
						"text": "Fancy stones"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JLabel" ) {
						name: "labelShadow"
						"text": "Stone shadow:"
					} )
					add( new FormComponent( "javax.swing.JCheckBox" ) {
						name: "checkBoxShowShadow"
						"text": "Show. Shadow size:"
						"selected": true
					} )
					add( new FormComponent( "javax.swing.JSpinner" ) {
						name: "spinnerShadowSize"
						"model": new javax.swing.SpinnerNumberModel( 100, 0, 999, 1 )
					} )
				}, new FormLayoutConstraints( class java.lang.String ) {
					"value": "Center"
				} )
				add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class java.awt.GridBagLayout ) {
					"$columnSpecs": "0:1.0, 80, 80"
					"$rowSpecs": "0"
					"$hGap": 5
					"$vGap": 5
				} ) {
					name: "buttonBar"
					"border": new javax.swing.border.EmptyBorder( 12, 0, 0, 0 )
					add( new FormComponent( "javax.swing.JButton" ) {
						name: "okButton"
						"text": "OK"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "okButtonActionPerformed", true ) )
					}, new FormLayoutConstraints( class com.jformdesigner.runtime.GridBagConstraintsEx ) {
						"gridx": 1
						"gridy": 0
					} )
					add( new FormComponent( "javax.swing.JButton" ) {
						name: "cancelButton"
						"text": "Cancel"
						addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "cancelButtonActionPerformed", true ) )
					}, new FormLayoutConstraints( class com.jformdesigner.runtime.GridBagConstraintsEx ) {
						"gridx": 2
						"gridy": 0
					} )
				}, new FormLayoutConstraints( class java.lang.String ) {
					"value": "South"
				} )
			}, new FormLayoutConstraints( class java.lang.String ) {
				"value": "Center"
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 0 )
			"size": new java.awt.Dimension( 640, 410 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "buttonGroupVariationLimit"
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 178, 432 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "buttonGroupAxisSetting"
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 360, 432 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "buttonGroupBoardColor"
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 434 )
		} )
	}
}
